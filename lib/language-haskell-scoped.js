"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.consumeCompBack = exports.deactivate = exports.activate = void 0;
const Atom = require("atom");
const editor_controller_1 = require("./editor-controller");
let resolveCB;
let disposables;
function activate() {
    resolveCB = undefined;
    const bprom = new Promise((resolve) => (resolveCB = resolve));
    const bdisp = (disposables = new Atom.CompositeDisposable());
    disposables.add(atom.workspace.observeTextEditors(async (ed) => {
        if (editor_controller_1.EditorController.shouldActivate(ed)) {
            bdisp.add(new editor_controller_1.EditorController(ed, await bprom));
        }
    }));
}
exports.activate = activate;
function deactivate() {
    resolveCB = undefined;
    disposables && disposables.dispose();
    disposables = undefined;
}
exports.deactivate = deactivate;
function consumeCompBack(service) {
    resolveCB && resolveCB(service);
}
exports.consumeCompBack = consumeCompBack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UtaGFza2VsbC1zY29wZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbGFuZ3VhZ2UtaGFza2VsbC1zY29wZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkJBQTRCO0FBQzVCLDJEQUFzRDtBQUd0RCxJQUFJLFNBQTBELENBQUE7QUFDOUQsSUFBSSxXQUFpRCxDQUFBO0FBRXJELFNBQWdCLFFBQVE7SUFDdEIsU0FBUyxHQUFHLFNBQVMsQ0FBQTtJQUNyQixNQUFNLEtBQUssR0FBRyxJQUFJLE9BQU8sQ0FDdkIsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxDQUNuQyxDQUFBO0lBQ0QsTUFBTSxLQUFLLEdBQUcsQ0FBQyxXQUFXLEdBQUcsSUFBSSxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxDQUFBO0lBQzVELFdBQVcsQ0FBQyxHQUFHLENBQ2IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUU7UUFDN0MsSUFBSSxvQ0FBZ0IsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDdkMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLG9DQUFnQixDQUFDLEVBQUUsRUFBRSxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUE7U0FDakQ7SUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFBO0FBQ0gsQ0FBQztBQWJELDRCQWFDO0FBRUQsU0FBZ0IsVUFBVTtJQUN4QixTQUFTLEdBQUcsU0FBUyxDQUFBO0lBQ3JCLFdBQVcsSUFBSSxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUE7SUFDcEMsV0FBVyxHQUFHLFNBQVMsQ0FBQTtBQUN6QixDQUFDO0FBSkQsZ0NBSUM7QUFFRCxTQUFnQixlQUFlLENBQUMsT0FBMkI7SUFDekQsU0FBUyxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQTtBQUNqQyxDQUFDO0FBRkQsMENBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBdG9tIGZyb20gJ2F0b20nXG5pbXBvcnQgeyBFZGl0b3JDb250cm9sbGVyIH0gZnJvbSAnLi9lZGl0b3ItY29udHJvbGxlcidcbmltcG9ydCB7IElDb21wbGV0aW9uQmFja2VuZCB9IGZyb20gJ2F0b20taGFza2VsbC11cGkvY29tcGxldGlvbi1iYWNrZW5kJ1xuXG5sZXQgcmVzb2x2ZUNCOiAoKHZhbDogSUNvbXBsZXRpb25CYWNrZW5kKSA9PiB2b2lkKSB8IHVuZGVmaW5lZFxubGV0IGRpc3Bvc2FibGVzOiBBdG9tLkNvbXBvc2l0ZURpc3Bvc2FibGUgfCB1bmRlZmluZWRcblxuZXhwb3J0IGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICByZXNvbHZlQ0IgPSB1bmRlZmluZWRcbiAgY29uc3QgYnByb20gPSBuZXcgUHJvbWlzZTxJQ29tcGxldGlvbkJhY2tlbmQ+KFxuICAgIChyZXNvbHZlKSA9PiAocmVzb2x2ZUNCID0gcmVzb2x2ZSksXG4gIClcbiAgY29uc3QgYmRpc3AgPSAoZGlzcG9zYWJsZXMgPSBuZXcgQXRvbS5Db21wb3NpdGVEaXNwb3NhYmxlKCkpXG4gIGRpc3Bvc2FibGVzLmFkZChcbiAgICBhdG9tLndvcmtzcGFjZS5vYnNlcnZlVGV4dEVkaXRvcnMoYXN5bmMgKGVkKSA9PiB7XG4gICAgICBpZiAoRWRpdG9yQ29udHJvbGxlci5zaG91bGRBY3RpdmF0ZShlZCkpIHtcbiAgICAgICAgYmRpc3AuYWRkKG5ldyBFZGl0b3JDb250cm9sbGVyKGVkLCBhd2FpdCBicHJvbSkpXG4gICAgICB9XG4gICAgfSksXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlYWN0aXZhdGUoKSB7XG4gIHJlc29sdmVDQiA9IHVuZGVmaW5lZFxuICBkaXNwb3NhYmxlcyAmJiBkaXNwb3NhYmxlcy5kaXNwb3NlKClcbiAgZGlzcG9zYWJsZXMgPSB1bmRlZmluZWRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnN1bWVDb21wQmFjayhzZXJ2aWNlOiBJQ29tcGxldGlvbkJhY2tlbmQpIHtcbiAgcmVzb2x2ZUNCICYmIHJlc29sdmVDQihzZXJ2aWNlKVxufVxuIl19